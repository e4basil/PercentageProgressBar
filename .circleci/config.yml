# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

config_android: &config_android
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: circleci/android:api-28-alpha

    working_directory: ~/ProgressApp

    environment:
      # Customize the JVM maximum heap limit
      JAVA_TOOL_OPTIONS: "-Xmx3200m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false"
      TERM: dumb
      MAX_RETRY: 4
      ANDROID_HOME: /usr/local/android-sdk-linux

update_sdk: &update_sdk
  run:
    name: Update SDK
    command: |
      mkdir "$ANDROID_HOME/licenses" || true
      echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
      echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
      sdkmanager "platform-tools" "platforms;android-28"

jobs:
  build_debug:
    <<: *config_android

    steps:
    - <<: *update_sdk
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
         command: sudo chmod +x ./gradlew

#      - run:
#          name: Check app and dependencies
#          command: ./gradlew check dependencyUpdates
#
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
                  - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test

      - store_artifacts:
                path: app/build/outputs
                destination: outputs
      # run tests!
#      - run:
#          name : gradle test
#          command: ./gradlew -p clean test



